package truststore

import (
	"encoding/hex"
	"testing"
)

var dupExtensionData = "3082032c30820214a003020102020448966180300d06092a864886f70d01010b0500303b311f301d06035504030c16636f6d2e6170706c652e6b65726265726f732e6b646331183016060355040a0c0f53797374656d204964656e74697479301e170d3136313232313232333831395a170d3336313231363232333831395a303b311f301d06035504030c16636f6d2e6170706c652e6b65726265726f732e6b646331183016060355040a0c0f53797374656d204964656e7469747930820122300d06092a864886f70d01010105000382010f003082010a0282010100b0f8a02b7b3fce0c70b96dc22322190b31ee1dd3a80bc4e99cf4d375c86ddb3d2a7a23fee439cdba7fbd18b6dbcaea5a0fa44c86453c72c82ed17a900b8be4ed0ba21a05cc2b4d04cb55f1cd0f46b4ca364b7d34d315397be81615741a0fd536ba2a1d3ffae7c08e952f14e1a8ddf112d0946d685ca5b8efe7147d861aec303a5e6bdfe091102bf68a925c6c7c98965a4fea8012d4b2b9f66d94623feb966cc3e0ac7d3443704aea1a3815ec83be2542c5f925880f03f513bf64df8d52cec3acb29dc81fc227be9d37785e98719caa5e74559f89875978c2503f3170e3b19bb6306b7d6f05c0a4d06c2a28b00105a50e9cc286b3292cedec8092f49f33babe450203010001a3383036300b0603551d0f0404030205a030130603551d25040c300a06082b0601050507030130120603551d25040b300906072b060105020305300d06092a864886f70d01010b0500038201010079ef266b9f73eb58c66e71d71f39ccb6973b61da260666f350d9836799f5375bd5268bc2aeecf5655404770da15022cf7db9e8e5beb8ef2eb60bc88864940d5f8721a58c32451d955c7803b4a87039823774a7de59e25fb4e0da8a3dc755e0f8d23374525fd2e25a27a2cc91dece5a1e807b56d8e50f55ed77f0873638040d0747b4ff414aea1fc1f7ab1872c92fc19176c673a48ce1498a68798943c87a6b533a2ddae91770481cdf253b4ef5b490fa519d9262404345c1dd11093c870b0f3ed0206f1c4575f8c859e3687c3490cd76672be55ebb20664aee9bfd333415809e9fcc11e4cf273b25ef916ed82faa3bb21131e8ab3f8fc97faf925b2dc1c57373"

func TestParseCertificate(t *testing.T) {
	cert, err := parseCertificate(validCA.Raw)
	if err != nil {
		t.Fatal(err)
	}
	if cert == nil {
		t.Fatal("expect parse certificate with valid certificate to return certificate")
	}
}

func TestParseCertificateDupExtension(t *testing.T) {
	dupExtensionBytes, err := hex.DecodeString(dupExtensionData)
	if err != nil {
		t.Fatal(err)
	}

	cert, err := parseCertificate(dupExtensionBytes)
	if cert != nil {
		t.Fatal("expect parsing duplicate extension certificates to return nil certificate")
	}
	if err != nil {
		t.Fatal("expect parsing duplicate extension certificate to return nil error")
	}
}
