─── Client ─────────────────────────────────────────────────────────────────────
    * Checking authentication: probing credentials locally…⠋
─── Client ─────────────────────────────────────────────────────────────────────
    * Checking authentication: testing credentials remotely…⠋
─── LclPreamble ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
─── LclHeader ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
─── LclHint ────────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
─── AuditHeader ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
─── AuditHint ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
─── TrustStoreAudit ────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    * Comparing local and expected CA certificates…⠋
─── TrustStoreAudit ────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
─── BootstrapHeader ────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
─── BootstrapHint ──────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
─── BootstrapDiagnostic ────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    * Checking diagnostic service on Anchor.dev…⠋
─── BootstrapDiagnostic ────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
─── DomainInput ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    ? What lcl.host domain would you like to use for diagnostics?
    | We'll ignore any characters that are not valid in a domain.
    ? hi-lcl.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    ? What lcl.host domain would you like to use for diagnostics?
    | We'll ignore any characters that are not valid in a domain.
    ? h.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    ? What lcl.host domain would you like to use for diagnostics?
    | We'll ignore any characters that are not valid in a domain.
    ? he.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    ? What lcl.host domain would you like to use for diagnostics?
    | We'll ignore any characters that are not valid in a domain.
    ? hel.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    ? What lcl.host domain would you like to use for diagnostics?
    | We'll ignore any characters that are not valid in a domain.
    ? hell.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    ? What lcl.host domain would you like to use for diagnostics?
    | We'll ignore any characters that are not valid in a domain.
    ? hello.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    ? What lcl.host domain would you like to use for diagnostics?
    | We'll ignore any characters that are not valid in a domain.
    ? hello-.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    ? What lcl.host domain would you like to use for diagnostics?
    | We'll ignore any characters that are not valid in a domain.
    ? hello-w.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    ? What lcl.host domain would you like to use for diagnostics?
    | We'll ignore any characters that are not valid in a domain.
    ? hello-wo.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    ? What lcl.host domain would you like to use for diagnostics?
    | We'll ignore any characters that are not valid in a domain.
    ? hello-wor.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    ? What lcl.host domain would you like to use for diagnostics?
    | We'll ignore any characters that are not valid in a domain.
    ? hello-worl.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    ? What lcl.host domain would you like to use for diagnostics?
    | We'll ignore any characters that are not valid in a domain.
    ? hello-world.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
─── DomainResolver ─────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    * Resolving hello-world.lcl.host domain…⠋
─── DomainResolver ─────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
─── ProvisionService ───────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Creating hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev… ⠋
─── ProvisionService ───────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
─── Bootstrap ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    ! Press Enter to open http://hello-world.lcl.host:4433 in your browser.
─── Bootstrap ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
─── TrustHeader ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
─── TrustUpdateConfirm ─────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    | Updates may require sudo privileges, learn why here: https://lcl.host/why-sudo
    ! Press Enter to install missing certificates. (requires sudo)
─── TrustUpdateConfirm ─────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
─── TrustUpdateStore ───────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    * Updating Mock: installing lcl/localhost - AnchorCA ECDSA… ⠋
─── TrustUpdateStore ───────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA]
─── TrustUpdateStore ───────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA]
    * Updating Mock: installing lcl/localhost - AnchorCA RSA… ⠋
─── TrustUpdateStore ───────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
─── Bootstrap ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    ! Press Enter to open https://hello-world.lcl.host:4433 in your browser.
─── Bootstrap ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
─── BootstrapSuccess ───────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
─── SetupHeader ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
─── SetupHint ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
─── Fetcher[github.com/anchordotdev/cli/api.Organization] ──────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    * Fetching organizations…⠋
─── Fetcher[github.com/anchordotdev/cli/api.Organization] ──────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
─── Fetcher[github.com/anchordotdev/cli/api.Realm] ─────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    * Fetching realms…⠋
─── Fetcher[github.com/anchordotdev/cli/api.Realm] ─────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
─── Fetcher[github.com/anchordotdev/cli/api.Service] ───────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    * Fetching services…⠋
─── Fetcher[github.com/anchordotdev/cli/api.Service] ───────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
─── SetupScan ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    * Scanning current directory for local application…⠋
─── SetupScan ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
─── SetupCategory ──────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    ? What application server type?
    > Go        
      JavaScript
      Python    
      Ruby      
      Custom    
─── SetupCategory ──────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
─── SetupName ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? lcl
─── SetupName ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? t 
─── SetupName ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? te 
─── SetupName ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? tes 
─── SetupName ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test 
─── SetupName ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test- 
─── SetupName ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-a 
─── SetupName ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-ap 
─── SetupName ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-app 
─── SetupName ──────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
─── DomainInput ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? test-app.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
─── DomainResolver ─────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    * Resolving test-app.lcl.host domain…⠋
─── DomainResolver ─────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
─── ProvisionService ───────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Creating test-app [test-app.lcl.host, test-app.localhost] go resources on Anchor.dev… ⠋
─── ProvisionService ───────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-app [test-app.lcl.host, test-app.localhost] go resources on Anchor.dev.
─── SetupMethod ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-app [test-app.lcl.host, test-app.localhost] go resources on Anchor.dev.
    ? How would you like to manage your lcl.host certificates?
    > ACME Automated - Anchor style guides you through setup and automates renewal - Recommended
      Manual - mkcert style leaves setup and renewal up to you                                  
─── SetupMethod ────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-app [test-app.lcl.host, test-app.localhost] go resources on Anchor.dev.
    - Entered automated certificate management.
─── SetupGuidePrompt ───────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-app [test-app.lcl.host, test-app.localhost] go resources on Anchor.dev.
    - Entered automated certificate management.
    | Now follow your customized Anchor.dev setup guide to automate certificate
    | management so you'll never have to manually provision certificates again.
    ! Press Enter to open https://anchor.dev/lcl/services/test-app/guide in your browser.
─── SetupGuidePrompt ───────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-app [test-app.lcl.host, test-app.localhost] go resources on Anchor.dev.
    - Entered automated certificate management.
    | Now follow your customized Anchor.dev setup guide to automate certificate
    | management so you'll never have to manually provision certificates again.
    - Opened https://anchor.dev/lcl/services/test-app/guide.
─── SetupGuideHint ─────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-app [test-app.lcl.host, test-app.localhost] go resources on Anchor.dev.
    - Entered automated certificate management.
    | Now follow your customized Anchor.dev setup guide to automate certificate
    | management so you'll never have to manually provision certificates again.
    - Opened https://anchor.dev/lcl/services/test-app/guide.
            
# Next Steps
    - After following the guide, check out your encrypted site at: https://test-app.lcl.host:4321
    - These certificates will renew automatically, time to enjoy effortless encryption.
─── AnchorTOML ─────────────────────────────────────────────────────────────────
| Let's set up fast and totally free lcl.host HTTPS!
                                                                 
# Setup lcl.host HTTPS Local Development Environment `anchor lcl`
    | We'll set you up to use HTTPS locally in your browsers and other programs.
                                                                       
# Audit lcl.host HTTPS Local Development Environment `anchor lcl audit`
    | We'll compare your local development CA certificates from Anchor and your local trust stores.
    - Compared local and expected CA certificates: need to install 2 missing certificates.
                                                                                          
# Initial System Configuration for lcl.host Local HTTPS Development `anchor lcl bootstrap`
    | We'll configure your browsers and OS to trust your local development certificates.
    - Checked diagnostic service on Anchor.dev: need to provision service.
    - Entered hello-world.lcl.host domain for lcl.host diagnostic certificate.
    - Resolved hello-world.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created hello-world [hello-world.lcl.host, hello-world.localhost] diagnostic resources on Anchor.dev.
    - Great, http://hello-world.lcl.host:4433 works as expected (without HTTPS).
    | Now, we'll add your personal CA certificates to your system's trust stores.
                                                                    
# Manage CA Certificates in your Local Trust Store(s) `anchor trust`
    - Updated Mock: installed lcl/localhost - AnchorCA [ECDSA, RSA]
    | Before we move on, let's test HTTPS.
    - Success! https://hello-world.lcl.host:4433 works as expected (encrypted with HTTPS).
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl, the only available organization. You can also use `--org lcl`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-app [test-app.lcl.host, test-app.localhost] go resources on Anchor.dev.
    - Entered automated certificate management.
    | Now follow your customized Anchor.dev setup guide to automate certificate
    | management so you'll never have to manually provision certificates again.
    - Opened https://anchor.dev/lcl/services/test-app/guide.
            
# Next Steps
    - After following the guide, check out your encrypted site at: https://test-app.lcl.host:4321
    - These certificates will renew automatically, time to enjoy effortless encryption.
    - Be sure to add anchor.toml to your version control system.
