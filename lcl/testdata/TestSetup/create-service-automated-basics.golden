─── Client ─────────────────────────────────────────────────────────────────────
    * Checking authentication: probing credentials locally…⠋
─── Client ─────────────────────────────────────────────────────────────────────
    * Checking authentication: testing credentials remotely…⠋
─── SetupHeader ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
─── SetupHint ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
─── Fetcher[github.com/anchordotdev/cli/api.Organization] ──────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    * Fetching organizations…⠋
─── Fetcher[github.com/anchordotdev/cli/api.Organization] ──────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
─── Selector[github.com/anchordotdev/cli/api.Organization] ─────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    ? Which organization's lcl.host local development environment do you want to setup?
    > lcl_setup (lcl_setup)  
      Create New Organization
─── Selector[github.com/anchordotdev/cli/api.Organization] ─────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
─── Fetcher[github.com/anchordotdev/cli/api.Realm] ─────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    * Fetching realms…⠋
─── Fetcher[github.com/anchordotdev/cli/api.Realm] ─────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
─── Fetcher[github.com/anchordotdev/cli/api.Service] ───────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    * Fetching services…⠋
─── Fetcher[github.com/anchordotdev/cli/api.Service] ───────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
─── SetupScan ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    * Scanning current directory for local application…⠋
─── SetupScan ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
─── SetupCategory ──────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    ? What application server type?
    > Go        
      JavaScript
      Python    
      Ruby      
      Custom    
─── SetupCategory ──────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
─── SetupServiceName ───────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? lcl
─── SetupServiceName ───────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-app 
─── SetupServiceName ───────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? test-app.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
─── DomainResolver ─────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    * Resolving test-app.lcl.host domain…⠋
─── DomainResolver ─────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
─── ProvisionService ───────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Creating test-app [test-app.lcl.host, test-app.localhost] go resources on Anchor.dev… ⠋
─── ProvisionService ───────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-app [test-app.lcl.host, test-app.localhost] go resources on Anchor.dev.
─── SetupMethod ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-app [test-app.lcl.host, test-app.localhost] go resources on Anchor.dev.
    ? How would you like to manage your lcl.host certificates?
    > ACME Automated - Anchor style guides you through setup and automates renewal - Recommended
      Manual - mkcert style leaves setup and renewal up to you                                  
─── SetupMethod ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-app [test-app.lcl.host, test-app.localhost] go resources on Anchor.dev.
    - Entered automated certificate management.
─── SetupGuidePrompt ───────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-app [test-app.lcl.host, test-app.localhost] go resources on Anchor.dev.
    - Entered automated certificate management.
    | Now follow your customized Anchor.dev setup guide to automate certificate
    | management so you'll never have to manually provision certificates again.
    ! Press Enter to open https://anchor.dev/lcl_setup/services/test-app/guide in your browser.
─── SetupGuidePrompt ───────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-app [test-app.lcl.host, test-app.localhost] go resources on Anchor.dev.
    - Entered automated certificate management.
    | Now follow your customized Anchor.dev setup guide to automate certificate
    | management so you'll never have to manually provision certificates again.
    - Opened https://anchor.dev/lcl_setup/services/test-app/guide.
─── SetupGuideHint ─────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-app [test-app.lcl.host, test-app.localhost] go resources on Anchor.dev.
    - Entered automated certificate management.
    | Now follow your customized Anchor.dev setup guide to automate certificate
    | management so you'll never have to manually provision certificates again.
    - Opened https://anchor.dev/lcl_setup/services/test-app/guide.
            
# Next Steps
    - After following the guide, check out your encrypted site at: https://test-app.lcl.host:<service-port>
    - These certificates will renew automatically, time to enjoy effortless encryption.
─── AnchorTOML ─────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Selected lcl_setup organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - No services found, so we'll create one.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-app application name.
    - Entered test-app.lcl.host domain for local application development.
    - Resolved test-app.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-app [test-app.lcl.host, test-app.localhost] go resources on Anchor.dev.
    - Entered automated certificate management.
    | Now follow your customized Anchor.dev setup guide to automate certificate
    | management so you'll never have to manually provision certificates again.
    - Opened https://anchor.dev/lcl_setup/services/test-app/guide.
            
# Next Steps
    - After following the guide, check out your encrypted site at: https://test-app.lcl.host:<service-port>
    - These certificates will renew automatically, time to enjoy effortless encryption.
    - Be sure to add anchor.toml to your version control system.
