─── Client ─────────────────────────────────────────────────────────────────────
    * Checking authentication: probing credentials locally…⠋
─── Client ─────────────────────────────────────────────────────────────────────
    * Checking authentication: testing credentials remotely…⠋
─── SetupHeader ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
─── SetupHint ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
─── Fetcher[github.com/anchordotdev/cli/api.Organization] ──────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    * Fetching organizations…⠋
─── Fetcher[github.com/anchordotdev/cli/api.Organization] ──────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
─── Fetcher[github.com/anchordotdev/cli/api.Realm] ─────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    * Fetching realms…⠋
─── Fetcher[github.com/anchordotdev/cli/api.Realm] ─────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
─── Fetcher[github.com/anchordotdev/cli/api.Service] ───────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    * Fetching services…⠋
─── Fetcher[github.com/anchordotdev/cli/api.Service] ───────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
─── Selector[github.com/anchordotdev/cli/api.Service] ──────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    ? Which lcl_setup/localhost service's lcl.host local development environment do you want to setup?
    > test-app (test-app)
      Create New Service 
─── Selector[github.com/anchordotdev/cli/api.Service] ──────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    ? Which lcl_setup/localhost service's lcl.host local development environment do you want to setup?
      test-app (test-app)
    > Create New Service 
─── Selector[github.com/anchordotdev/cli/api.Service] ──────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
─── SetupScan ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    * Scanning current directory for local application…⠋
─── SetupScan ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
─── SetupCategory ──────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    ? What application server type?
    > Go        
      JavaScript
      Python    
      Ruby      
      Custom    
─── SetupCategory ──────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? lcl
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? t 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? te 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? tes 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test- 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-e 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-ex 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-exp 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-expl 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-expli 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explic 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explici 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explicit 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explicit- 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explicit-s 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explicit-su 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explicit-sub 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explicit-subd 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explicit-subdo 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explicit-subdom 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explicit-subdoma 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explicit-subdomai 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explicit-subdomain 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explicit-subdomain- 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explicit-subdomain-a 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explicit-subdomain-ap 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    ? What is the application name?
    ? test-explicit-subdomain-app 
─── SetupName ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? test-explicit-subdomain-app.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? t.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? th.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? thi.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-i.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-m.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my-.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my-w.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my-we.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my-wei.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my-weir.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my-weird.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my-weird-.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my-weird-s.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my-weird-su.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my-weird-sub.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my-weird-subd.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my-weird-subdo.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my-weird-subdom.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my-weird-subdoma.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my-weird-subdomai.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    ? What lcl.host domain would you like to use for local application development?
    | We'll ignore any characters that are not valid in a domain.
    ? this-is-my-weird-subdomain.lcl.host
─── DomainInput ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    - Entered this-is-my-weird-subdomain.lcl.host domain for local application development.
─── DomainResolver ─────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    - Entered this-is-my-weird-subdomain.lcl.host domain for local application development.
    * Resolving this-is-my-weird-subdomain.lcl.host domain…⠋
─── DomainResolver ─────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    - Entered this-is-my-weird-subdomain.lcl.host domain for local application development.
    - Resolved this-is-my-weird-subdomain.lcl.host domain: success!
─── ProvisionService ───────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    - Entered this-is-my-weird-subdomain.lcl.host domain for local application development.
    - Resolved this-is-my-weird-subdomain.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Creating test-explicit-subdomain-app [this-is-my-weird-subdomain.lcl.host, this-is-my-weird-subdomain.localhost] go resources on Anchor.dev… ⠋
─── ProvisionService ───────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    - Entered this-is-my-weird-subdomain.lcl.host domain for local application development.
    - Resolved this-is-my-weird-subdomain.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-explicit-subdomain-app [this-is-my-weird-subdomain.lcl.host, this-is-my-weird-subdomain.localhost] go resources on Anchor.dev.
─── SetupMethod ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    - Entered this-is-my-weird-subdomain.lcl.host domain for local application development.
    - Resolved this-is-my-weird-subdomain.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-explicit-subdomain-app [this-is-my-weird-subdomain.lcl.host, this-is-my-weird-subdomain.localhost] go resources on Anchor.dev.
    ? How would you like to manage your lcl.host certificates?
    > ACME Automated - Anchor style guides you through setup and automates renewal - Recommended
      Manual - mkcert style leaves setup and renewal up to you                                  
─── SetupMethod ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    - Entered this-is-my-weird-subdomain.lcl.host domain for local application development.
    - Resolved this-is-my-weird-subdomain.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-explicit-subdomain-app [this-is-my-weird-subdomain.lcl.host, this-is-my-weird-subdomain.localhost] go resources on Anchor.dev.
    ? How would you like to manage your lcl.host certificates?
      ACME Automated - Anchor style guides you through setup and automates renewal - Recommended
    > Manual - mkcert style leaves setup and renewal up to you                                  
─── SetupMethod ────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    - Entered this-is-my-weird-subdomain.lcl.host domain for local application development.
    - Resolved this-is-my-weird-subdomain.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-explicit-subdomain-app [this-is-my-weird-subdomain.lcl.host, this-is-my-weird-subdomain.localhost] go resources on Anchor.dev.
    - Entered manual certificate management.
─── Provision ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    - Entered this-is-my-weird-subdomain.lcl.host domain for local application development.
    - Resolved this-is-my-weird-subdomain.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-explicit-subdomain-app [this-is-my-weird-subdomain.lcl.host, this-is-my-weird-subdomain.localhost] go resources on Anchor.dev.
    - Entered manual certificate management.
                                           
# Provision Certificate `anchor lcl mkcert`
    * Provisioning certificate for [this-is-my-weird-subdomain.lcl.host, this-is-my-weird-subdomain.localhost]… ⠋
─── Provision ──────────────────────────────────────────────────────────────────
                                               
# Setup lcl.host Application `anchor lcl setup`
    | We'll integrate your application and system for HTTPS local development.
    - Using lcl_setup, the only available organization. You can also use `--org lcl_setup`.
    - Using localhost, the only available realm. You can also use `--realm localhost`.
    - Selected Create New Service.
    - Scanned current directory.
    - Entered go application server type.
    - Entered test-explicit-subdomain-app application name.
    - Entered this-is-my-weird-subdomain.lcl.host domain for local application development.
    - Resolved this-is-my-weird-subdomain.lcl.host domain: success!
    | Now we'll provision Anchor.dev resources and HTTPS certificates for you.
    - Created test-explicit-subdomain-app [this-is-my-weird-subdomain.lcl.host, this-is-my-weird-subdomain.localhost] go resources on Anchor.dev.
    - Entered manual certificate management.
                                           
# Provision Certificate `anchor lcl mkcert`
    - Provisioned certificate for [this-is-my-weird-subdomain.lcl.host, this-is-my-weird-subdomain.localhost].
    - Wrote certificate to ./this-is-my-weird-subdomain.lcl.host+1-cert.pem
    - Wrote chain to ./this-is-my-weird-subdomain.lcl.host+1-chain.pem
    - Wrote key to ./this-is-my-weird-subdomain.lcl.host+1-key.pem
            
# Next Steps
    - To use these certificates please reference your language and/or framework docs.
    - When these expire, run `anchor lcl mkcert --domains this-is-my-weird-subdomain.lcl.host,this-is-my-weird-subdomain.localhost --org lcl_setup --realm localhost --service test-explicit-subdomain-app` to generate new ones.
