// Package api provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/deepmap/oapi-codegen version v1.12.4 DO NOT EDIT.
package api

import (
	"time"

	openapi_types "github.com/deepmap/oapi-codegen/pkg/types"
)

const (
	Pat_basicScopes  = "pat_basic.Scopes"
	Pat_bearerScopes = "pat_bearer.Scopes"
)

// Defines values for CredentialStatus.
const (
	Expired CredentialStatus = "expired"
	Online  CredentialStatus = "online"
	Revoked CredentialStatus = "revoked"
)

// AuthCliCodesResponse defines model for auth_cli_codes_response.
type AuthCliCodesResponse struct {
	// DeviceCode Unique code associated with origin device for CLI auth flow.
	DeviceCode string `json:"device_code"`

	// ExpiresIn Number of seconds until device and user codes expire, defaults to 900s (15m).
	ExpiresIn int32 `json:"expires_in"`

	// Interval Minimum number of seconds to wait before re-polling during CLI auth flow, defaults to 5s.
	Interval int32 `json:"interval"`

	// UserCode User verification code to be presented for the user to enter into a browser, formed by 8 characters with a hyphen in the middle.
	UserCode string `json:"user_code"`

	// VerificationUri The URL where the user will need to enter their code to complete the CLI auth flow.
	VerificationUri string `json:"verification_uri"`
}

// AuthCliPatTokensResponse defines model for auth_cli_pat_tokens_response.
type AuthCliPatTokensResponse struct {
	// PatToken Authenticated token for user API interactions.
	PatToken string `json:"pat_token"`
}

// Credential defines model for credential.
type Credential struct {
	// CreatedAt UTC time when credential was created.
	CreatedAt time.Time `json:"created_at"`

	// Name name of credential
	Name string `json:"name"`

	// Revision Current revision of credential
	Revision int64 `json:"revision"`

	// RevokedAt UTC time after which credential will be revoked
	RevokedAt *time.Time `json:"revoked_at"`

	// Serial serial id for credetial
	Serial string `json:"serial"`

	// SignatureAlgorithm Algorithm used to sign credential
	SignatureAlgorithm interface{} `json:"signature_algorithm"`

	// Status current status of credential
	Status CredentialStatus `json:"status"`

	// TextualEncoding base64 textual encoding of credential based on RFC7468
	TextualEncoding string `json:"textual_encoding"`

	// Uuid uuid for credential
	Uuid *openapi_types.UUID `json:"uuid,omitempty"`

	// ValidAfter UTC time after which credential will be valid.
	ValidAfter time.Time `json:"valid_after"`

	// ValidBefore UTC time after which credential will no longer be valid.
	ValidBefore time.Time `json:"valid_before"`
}

// CredentialStatus current status of credential
type CredentialStatus string

// Error defines model for error.
type Error struct {
	// Detail A human-readable description of this occurrence of the problem.
	Detail string `json:"detail"`

	// Status HTTP status code of this occurrence of the problem.
	Status int32 `json:"status"`

	// Title A human-readable description of this problem type.
	Title string `json:"title"`

	// Type URI identifying problem.
	Type string `json:"type"`
}

// Root defines model for root.
type Root struct {
	PersonalOrg struct {
		Slug *string `json:"slug,omitempty"`
	} `json:"personal_org"`
	Whoami string `json:"whoami"`
}

// PathOrgParam defines model for path_org_param.
type PathOrgParam = string

// PathRealmParam defines model for path_realm_param.
type PathRealmParam = string

// QueryCaParam defines model for query_ca_param.
type QueryCaParam = string

// CreateCliTokenJSONBody defines parameters for CreateCliToken.
type CreateCliTokenJSONBody struct {
	// DeviceCode Unique code associated with origin device for CLI auth flow.
	DeviceCode string `json:"device_code"`
}

// GetCredentialsParams defines parameters for GetCredentials.
type GetCredentialsParams struct {
	// CaParam ca for operation
	CaParam *QueryCaParam `form:"ca_param,omitempty" json:"ca_param,omitempty"`
}

// CreateCliTokenJSONRequestBody defines body for CreateCliToken for application/json ContentType.
type CreateCliTokenJSONRequestBody CreateCliTokenJSONBody
