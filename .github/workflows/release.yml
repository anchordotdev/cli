name: Release

concurrency: release

on:
  workflow_dispatch:
  push:
    tags: ["v*"]

permissions:
  contents: write
  packages: write
  id-token: write

jobs:
  prepare:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod
      - shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        if: matrix.os == 'ubuntu-latest'
        with:
          path: cmd/anchor/dist/linux
          key: linux-${{ env.sha_short }}
          enableCrossOsArchive: true
      - uses: actions/cache@v4
        if: matrix.os == 'macos-latest'
        with:
          path: cmd/anchor/dist/darwin
          key: darwin-${{ env.sha_short }}
          enableCrossOsArchive: true
      - uses: actions/cache@v4
        if: matrix.os == 'windows-latest'
        with:
          path: cmd/anchor/dist/windows
          key: windows-${{ env.sha_short }}
          enableCrossOsArchive: true
      - name: non-windows flags
        if: matrix.os != 'windows-latest'
        shell: bash
        run: echo 'flags=--skip chocolatey' >> $GITHUB_ENV
      - name: windows flags
        if: matrix.os == 'windows-latest'
        shell: bash
        run: echo 'flags=--skip homebrew' >> $GITHUB_ENV
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser-pro
          version: latest
          args: release --clean --split ${{ env.flags }}
          workdir: cmd/anchor
        env:
          GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
      - shell: bash
        if: matrix.os == 'windows-latest'
        working-directory: cmd/anchor
        run: |
          cp "*.msi" ./dist/windows/

  release:
    runs-on: windows-latest
    needs: prepare
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: go.mod

      # Copy Caches
      - shell: bash
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
      - uses: actions/cache@v4
        with:
          path: cmd/anchor/dist/linux
          key: linux-${{ env.sha_short }}
          enableCrossOsArchive: true
      - uses: actions/cache@v4
        with:
          path: cmd/anchor/dist/darwin
          key: darwin-${{ env.sha_short }}
          enableCrossOsArchive: true
      - uses: actions/cache@v4
        with:
          path: cmd/anchor/dist/windows
          key: windows-${{ env.sha_short }}
          enableCrossOsArchive: true

      - shell: bash
        working-directory: cmd/anchor
        run: |
          cp "./dist/windows/*.msi" ./

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser-pro
          version: latest
          args: continue --merge
          workdir: cmd/anchor
        env:
          GITHUB_TOKEN: ${{ secrets._GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          CHOCOLATEY_API_KEY: ${{ secrets.CHOCOLATEY_API_KEY }}
